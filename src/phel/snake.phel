(ns phel-cli-gui\snake
  (:require phel-cli-gui\terminal-gui :refer [clear-screen render-board render input-stream]))

(def nano-seconds-delay 150000)
(def max-width 40)
(def max-height 20)

(def key-left-arrow "1b5b44")
(def key-down-arrow "1b5b42")
(def key-right-arrow "1b5b43")
(def key-up-arrow "1b5b41")

(def directions
  {key-left-arrow :left
   key-down-arrow :down
   key-right-arrow :right
   key-up-arrow :up})

(defn move-snake [snake next-direction]
  (if (nil? next-direction)
    (recur snake (snake :direction))
    (let [updated-snake (case next-direction
                          :left (update-in snake [:head :x] dec)
                          :right (update-in snake [:head  :x] inc)
                          :up (update-in snake [:head :y] dec)
                          :down (update-in snake [:head :y] inc))]
      (merge updated-snake {:direction next-direction}))))

(defn render-snake [snake]
  (render (get-in snake [:head :x]) (get-in snake [:head :y]) "X")
  (for [t :in (snake :tail)]
    (render (t :x) (t :y) "x")))

(defn render-goal [goal]
  (render (goal :x) (goal :y) "A"))

(defn check-game-over-collisions-with-itself [snake] "TODO")
(defn check-game-over-collisions-with-board [snake] "TODO")

(defn check-game-over-collisions
  [snake]
  (check-game-over-collisions-with-itself snake)
  (check-game-over-collisions-with-board snake))

(defn generate-new-goal []
  {:x (rand-int (- max-width 3))
   :y (rand-int (- max-height 3))})

(defn update-goal [snake goal]
  (if (and
       (= (get-in snake [:head :x]) (goal :x))
       (= (get-in snake [:head :y]) (goal :y)))
    (generate-new-goal)
    goal))

(defn main []
  (loop [snake {:head {:x 1 :y 1} :tail [] :direction :right}
         goal (generate-new-goal)]
    (render 50 0 (rand-int 100)) # debug to verify it's running
    (php/usleep nano-seconds-delay)

    (render-board max-width max-height)

    (let [raw-in (php/fread input-stream 3)
          in (php/bin2hex raw-in)
          next-direction (directions in)
          updated-snake (move-snake snake next-direction)
          updated-goal (update-goal snake goal)]

      (check-game-over-collisions snake)

      (render 0 (+ max-height 3) (str (php/time) " - updated-snake" updated-snake))
      (render-snake updated-snake)
      (render-goal updated-goal)

      (recur updated-snake updated-goal))))

(clear-screen)
(main)
