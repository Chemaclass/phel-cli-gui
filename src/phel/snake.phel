(ns phel-cli-gui\snake
  (:require phel-cli-gui\terminal-gui :refer [clear-screen board render]))

(def input-stream php/STDIN)
(def nano-seconds-delay 50000)
(def max-width 10)
(def max-height 5)

(def key-left-arrow "1b5b440a")
(def key-down-arrow "1b5b420a")
(def key-right-arrow "1b5b430a")
(def key-up-arrow "1b5b410a")

(def directions
   key-left-arrow :left
   key-down-arrow :down
   key-right-arrow :right
   key-up-arrow :up})

(defn move-snake [next-direction snake]
  (case next-direction
    :left {:x (dec (snake :x)) :y (snake :y)}
    :right {:x (inc (snake :x)) :y (snake :y)}
    :up {:x (snake :x) :y (dec (snake :y))}
    :down {:x (snake :x) :y (inc (snake :y))}
    nil snake))

(defn main [input-stream]
  (loop [snake {:x 1 :y 1 :direction :right}]
    (let [raw-in (php/fread input-stream 6)
          in (php/bin2hex raw-in)
          next-direction (directions in)
          coordinates (move-snake next-direction snake)]
      (println raw-in in)
      (cond
        (nil? next-direction) (recur snake) #keep the old direction
        true (do
               (php/usleep nano-seconds-delay)
               (render (coordinates :x) (coordinates :y) "x")
               (render 0 (+ max-height 5) (merge snake coordinates {:direction next})) # for testing purposes
               (recur (merge snake coordinates {:direction next-direction})))))))

(clear-screen)
(render 0 (+ max-height 2) "Current coordinates")
(main input-stream)

# TODO: keep rending the board and update the coordinates only when the user press a button
