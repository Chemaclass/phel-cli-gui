(ns phel-cli-gui\snake
  (:require phel-cli-gui\terminal-gui :refer [clear-screen
                                              render-board
                                              render
                                              input-stream])

  (:require phel-cli-gui\snake\logic :refer [generate-new-goal
                                             normalize-next-direction
                                             move-snake
                                             snake-reach-goal?
                                             update-goal
                                             collision-with-board?]))

(def nano-seconds-delay 50000)
(def board {:width 40 :height 20})

(defn render-snake [snake]
  (render (get-in snake [:head :x]) (get-in snake [:head :y]) "X")
  (for [t :in (snake :tail)]
    (render (t :x) (t :y) "x")))

(defn render-goal [goal]
  (render (goal :x) (goal :y) "A"))

(defn render-game-over []
  (render (/ (board :width) 2) (/ (board :height) 2) "GAME OVER")
  (php/die "So much fun!"))

(defn debug-snake [snake]
  (render 0 (+ (board :height) 3) (php/str_repeat " " 100)) # clean the line
  (render 0 (+ (board :height) 3) (str (php/time) " - snake" snake)))

(defn main []
  (loop [snake {:head {:x 1 :y 1}
                :tail []
                :direction :right
                :points 0}
         goal (generate-new-goal board)]

    (php/usleep nano-seconds-delay)
    (render-board board)

    (let [in (php/bin2hex (php/fread input-stream 3))
          next-direction (normalize-next-direction in)
          updated-snake (move-snake snake next-direction)
          new-goal? (snake-reach-goal? snake goal)
          updated-goal (update-goal snake goal board)]

      (if (collision-with-board? snake board) (render-game-over))

      (debug-snake updated-snake)

      (render-snake updated-snake)
      (render-goal updated-goal)

      (recur
       (if (id goal updated-goal)
         updated-snake
         (update-in updated-snake [:points] inc))
       updated-goal))))

(clear-screen)
(main)
